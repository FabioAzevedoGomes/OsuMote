
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action HelpAction;

	private global::Gtk.Action helpAction;

	private global::Gtk.Action HelpAction1;

	private global::Gtk.Action HelpAction2;

	private global::Gtk.Action ControlsAction;

	private global::Gtk.Alignment alignment1;

	private global::Gtk.VBox vbox3;

	private global::Gtk.MenuBar menubar5;

	private global::Gtk.HBox mainWindowSeparationBox;

	private global::Gtk.Alignment alignment2;

	private global::Gtk.Frame wiimoteFrame;

	private global::Gtk.Alignment GtkAlignment;

	private global::Gtk.VBox vbox1;

	private global::Gtk.Button connectButton;

	private global::Gtk.Button calibrateButton;

	private global::Gtk.Button disconnectButton;

	private global::Gtk.Label wiimoteFrameLabel;

	private global::Gtk.Alignment alignment3;

	private global::Gtk.Frame feedbackFrame;

	private global::Gtk.Alignment GtkAlignment1;

	private global::Gtk.VBox vbox2;

	private global::Gtk.VBox vbox4;

	private global::Gtk.CheckButton vibrationCheckbutton;

	private global::Gtk.CheckButton soundCheckbutton;

	private global::Gtk.Frame soundFrame;

	private global::Gtk.Alignment GtkAlignment2;

	private global::Gtk.VBox vbox5;

	private global::Gtk.HBox hbox2;

	private global::Gtk.Label centerSoundLabel;

	private global::Gtk.Button centerListenButton;

	private global::Gtk.Button centerChooseButton;

	private global::Gtk.HBox hbox3;

	private global::Gtk.Label sideSoundLabel;

	private global::Gtk.Button sidesListenButton;

	private global::Gtk.Button sidesChooseButton;

	private global::Gtk.Label soundFrameLabel;

	private global::Gtk.Label feedbackFrameLabel;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
		this.HelpAction = new global::Gtk.Action("HelpAction", global::Mono.Unix.Catalog.GetString("Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Help");
		w1.Add(this.HelpAction, null);
		this.helpAction = new global::Gtk.Action("helpAction", null, null, "gtk-help");
		w1.Add(this.helpAction, null);
		this.HelpAction1 = new global::Gtk.Action("HelpAction1", global::Mono.Unix.Catalog.GetString("Help"), null, null);
		this.HelpAction1.ShortLabel = global::Mono.Unix.Catalog.GetString("Help");
		w1.Add(this.HelpAction1, null);
		this.HelpAction2 = new global::Gtk.Action("HelpAction2", global::Mono.Unix.Catalog.GetString("Help"), null, null);
		this.HelpAction2.ShortLabel = global::Mono.Unix.Catalog.GetString("Help");
		w1.Add(this.HelpAction2, null);
		this.ControlsAction = new global::Gtk.Action("ControlsAction", global::Mono.Unix.Catalog.GetString("Controls"), null, null);
		this.ControlsAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Controls");
		w1.Add(this.ControlsAction, null);
		this.UIManager.InsertActionGroup(w1, 0);
		this.AddAccelGroup(this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("OsuMote");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.alignment1 = new global::Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
		this.alignment1.Name = "alignment1";
		// Container child alignment1.Gtk.Container+ContainerChild
		this.vbox3 = new global::Gtk.VBox();
		this.vbox3.Name = "vbox3";
		this.vbox3.Spacing = 6;
		// Container child vbox3.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString("<ui><menubar name=\'menubar5\'><menu name=\'HelpAction2\' action=\'HelpAction2\'><menui" +
				"tem name=\'ControlsAction\' action=\'ControlsAction\'/></menu></menubar></ui>");
		this.menubar5 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget("/menubar5")));
		this.menubar5.Name = "menubar5";
		this.vbox3.Add(this.menubar5);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.menubar5]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.mainWindowSeparationBox = new global::Gtk.HBox();
		this.mainWindowSeparationBox.Name = "mainWindowSeparationBox";
		this.mainWindowSeparationBox.Homogeneous = true;
		this.mainWindowSeparationBox.Spacing = 6;
		this.mainWindowSeparationBox.BorderWidth = ((uint)(3));
		// Container child mainWindowSeparationBox.Gtk.Box+BoxChild
		this.alignment2 = new global::Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
		this.alignment2.Name = "alignment2";
		// Container child alignment2.Gtk.Container+ContainerChild
		this.wiimoteFrame = new global::Gtk.Frame();
		this.wiimoteFrame.Name = "wiimoteFrame";
		this.wiimoteFrame.ShadowType = ((global::Gtk.ShadowType)(2));
		this.wiimoteFrame.BorderWidth = ((uint)(2));
		// Container child wiimoteFrame.Gtk.Container+ContainerChild
		this.GtkAlignment = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
		this.GtkAlignment.Name = "GtkAlignment";
		this.GtkAlignment.LeftPadding = ((uint)(12));
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox();
		this.vbox1.Name = "vbox1";
		this.vbox1.Homogeneous = true;
		this.vbox1.Spacing = 6;
		this.vbox1.BorderWidth = ((uint)(2));
		// Container child vbox1.Gtk.Box+BoxChild
		this.connectButton = new global::Gtk.Button();
		global::Gtk.Tooltips w3 = new Gtk.Tooltips();
		w3.SetTip(this.connectButton, "Attempt to connect to the wiimote via bluetooth", "Attempt to connect to the wiimote via bluetooth");
		this.connectButton.CanFocus = true;
		this.connectButton.Name = "connectButton";
		this.connectButton.UseUnderline = true;
		this.connectButton.Label = "Connect";
		this.vbox1.Add(this.connectButton);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.connectButton]));
		w4.Position = 0;
		w4.Expand = false;
		w4.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.calibrateButton = new global::Gtk.Button();
		w3.SetTip(this.calibrateButton, "Calibrate movement detection", "Calibrate movement detection");
		this.calibrateButton.Sensitive = false;
		this.calibrateButton.CanFocus = true;
		this.calibrateButton.Name = "calibrateButton";
		this.calibrateButton.UseUnderline = true;
		this.calibrateButton.Label = "Calibrate";
		this.vbox1.Add(this.calibrateButton);
		global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.calibrateButton]));
		w5.Position = 1;
		w5.Expand = false;
		w5.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.disconnectButton = new global::Gtk.Button();
		w3.SetTip(this.disconnectButton, "Disconnect currently connected wiimote", "Disconnect currently connected wiimote");
		this.disconnectButton.Sensitive = false;
		this.disconnectButton.CanFocus = true;
		this.disconnectButton.Name = "disconnectButton";
		this.disconnectButton.UseUnderline = true;
		this.disconnectButton.Label = "Disconnect";
		this.vbox1.Add(this.disconnectButton);
		global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.disconnectButton]));
		w6.Position = 2;
		w6.Expand = false;
		w6.Fill = false;
		this.GtkAlignment.Add(this.vbox1);
		this.wiimoteFrame.Add(this.GtkAlignment);
		this.wiimoteFrameLabel = new global::Gtk.Label();
		this.wiimoteFrameLabel.Name = "wiimoteFrameLabel";
		this.wiimoteFrameLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Wiimote</b>");
		this.wiimoteFrameLabel.UseMarkup = true;
		this.wiimoteFrame.LabelWidget = this.wiimoteFrameLabel;
		this.alignment2.Add(this.wiimoteFrame);
		this.mainWindowSeparationBox.Add(this.alignment2);
		global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.mainWindowSeparationBox[this.alignment2]));
		w10.Position = 0;
		// Container child mainWindowSeparationBox.Gtk.Box+BoxChild
		this.alignment3 = new global::Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
		this.alignment3.Name = "alignment3";
		// Container child alignment3.Gtk.Container+ContainerChild
		this.feedbackFrame = new global::Gtk.Frame();
		this.feedbackFrame.Sensitive = false;
		this.feedbackFrame.Name = "feedbackFrame";
		this.feedbackFrame.ShadowType = ((global::Gtk.ShadowType)(2));
		this.feedbackFrame.BorderWidth = ((uint)(2));
		// Container child feedbackFrame.Gtk.Container+ContainerChild
		this.GtkAlignment1 = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
		this.GtkAlignment1.Name = "GtkAlignment1";
		this.GtkAlignment1.LeftPadding = ((uint)(12));
		// Container child GtkAlignment1.Gtk.Container+ContainerChild
		this.vbox2 = new global::Gtk.VBox();
		this.vbox2.Name = "vbox2";
		this.vbox2.Spacing = 6;
		// Container child vbox2.Gtk.Box+BoxChild
		this.vbox4 = new global::Gtk.VBox();
		this.vbox4.Name = "vbox4";
		this.vbox4.Spacing = 6;
		// Container child vbox4.Gtk.Box+BoxChild
		this.vibrationCheckbutton = new global::Gtk.CheckButton();
		w3.SetTip(this.vibrationCheckbutton, "Enables vibration when a hit is registered", "Enables vibration when a hit is registered");
		this.vibrationCheckbutton.CanFocus = true;
		this.vibrationCheckbutton.Name = "vibrationCheckbutton";
		this.vibrationCheckbutton.Label = "Vibration";
		this.vibrationCheckbutton.DrawIndicator = true;
		this.vibrationCheckbutton.UseUnderline = true;
		this.vbox4.Add(this.vibrationCheckbutton);
		global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox4[this.vibrationCheckbutton]));
		w11.Position = 0;
		w11.Expand = false;
		w11.Fill = false;
		// Container child vbox4.Gtk.Box+BoxChild
		this.soundCheckbutton = new global::Gtk.CheckButton();
		w3.SetTip(this.soundCheckbutton, "Play a sound through the wiimote speaker when a hit is registered (See below)", "Play a sound through the wiimote speaker when a hit is registered (See below)");
		this.soundCheckbutton.CanFocus = true;
		this.soundCheckbutton.Name = "soundCheckbutton";
		this.soundCheckbutton.Label = "Sound";
		this.soundCheckbutton.DrawIndicator = true;
		this.soundCheckbutton.UseUnderline = true;
		this.vbox4.Add(this.soundCheckbutton);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vbox4[this.soundCheckbutton]));
		w12.Position = 1;
		w12.Expand = false;
		w12.Fill = false;
		this.vbox2.Add(this.vbox4);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.vbox4]));
		w13.Position = 0;
		w13.Expand = false;
		w13.Fill = false;
		// Container child vbox2.Gtk.Box+BoxChild
		this.soundFrame = new global::Gtk.Frame();
		this.soundFrame.Sensitive = false;
		this.soundFrame.CanDefault = true;
		this.soundFrame.Name = "soundFrame";
		this.soundFrame.ShadowType = ((global::Gtk.ShadowType)(2));
		this.soundFrame.BorderWidth = ((uint)(2));
		// Container child soundFrame.Gtk.Container+ContainerChild
		this.GtkAlignment2 = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
		this.GtkAlignment2.Name = "GtkAlignment2";
		this.GtkAlignment2.LeftPadding = ((uint)(12));
		// Container child GtkAlignment2.Gtk.Container+ContainerChild
		this.vbox5 = new global::Gtk.VBox();
		this.vbox5.Name = "vbox5";
		this.vbox5.Homogeneous = true;
		this.vbox5.Spacing = 6;
		this.vbox5.BorderWidth = ((uint)(2));
		// Container child vbox5.Gtk.Box+BoxChild
		this.hbox2 = new global::Gtk.HBox();
		this.hbox2.Name = "hbox2";
		this.hbox2.Spacing = 6;
		// Container child hbox2.Gtk.Box+BoxChild
		this.centerSoundLabel = new global::Gtk.Label();
		this.centerSoundLabel.Name = "centerSoundLabel";
		this.centerSoundLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Drum Center Hit");
		this.hbox2.Add(this.centerSoundLabel);
		global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.centerSoundLabel]));
		w14.Position = 0;
		w14.Expand = false;
		w14.Fill = false;
		// Container child hbox2.Gtk.Box+BoxChild
		this.centerListenButton = new global::Gtk.Button();
		w3.SetTip(this.centerListenButton, "Listen to the sound for a hit in the drum center", "Listen to the sound for a hit in the drum center");
		this.centerListenButton.CanFocus = true;
		this.centerListenButton.Name = "centerListenButton";
		this.centerListenButton.UseUnderline = true;
		this.centerListenButton.Label = "Listen";
		this.hbox2.Add(this.centerListenButton);
		global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.centerListenButton]));
		w15.Position = 1;
		w15.Expand = false;
		w15.Fill = false;
		// Container child hbox2.Gtk.Box+BoxChild
		this.centerChooseButton = new global::Gtk.Button();
		w3.SetTip(this.centerChooseButton, "Choose what sound will be played when a center hit is registered", "Choose what sound will be played when a center hit is registered");
		this.centerChooseButton.CanFocus = true;
		this.centerChooseButton.Name = "centerChooseButton";
		this.centerChooseButton.UseUnderline = true;
		this.centerChooseButton.Label = "Choose";
		this.hbox2.Add(this.centerChooseButton);
		global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.centerChooseButton]));
		w16.Position = 2;
		w16.Expand = false;
		w16.Fill = false;
		this.vbox5.Add(this.hbox2);
		global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.vbox5[this.hbox2]));
		w17.Position = 0;
		w17.Expand = false;
		w17.Fill = false;
		// Container child vbox5.Gtk.Box+BoxChild
		this.hbox3 = new global::Gtk.HBox();
		this.hbox3.Name = "hbox3";
		this.hbox3.Spacing = 6;
		// Container child hbox3.Gtk.Box+BoxChild
		this.sideSoundLabel = new global::Gtk.Label();
		this.sideSoundLabel.Name = "sideSoundLabel";
		this.sideSoundLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Drum Side Hit");
		this.hbox3.Add(this.sideSoundLabel);
		global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.sideSoundLabel]));
		w18.Position = 0;
		w18.Expand = false;
		w18.Fill = false;
		w18.Padding = ((uint)(8));
		// Container child hbox3.Gtk.Box+BoxChild
		this.sidesListenButton = new global::Gtk.Button();
		w3.SetTip(this.sidesListenButton, "Listen to the sound for a hit on drum sides", "Listen to the sound for a hit on drum sides");
		this.sidesListenButton.CanFocus = true;
		this.sidesListenButton.Name = "sidesListenButton";
		this.sidesListenButton.UseUnderline = true;
		this.sidesListenButton.Label = "Listen";
		this.hbox3.Add(this.sidesListenButton);
		global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.sidesListenButton]));
		w19.Position = 1;
		w19.Expand = false;
		w19.Fill = false;
		// Container child hbox3.Gtk.Box+BoxChild
		this.sidesChooseButton = new global::Gtk.Button();
		w3.SetTip(this.sidesChooseButton, "Choose what sound will be played when a side hit is registered", "Choose what sound will be played when a side hit is registered");
		this.sidesChooseButton.CanFocus = true;
		this.sidesChooseButton.Name = "sidesChooseButton";
		this.sidesChooseButton.UseUnderline = true;
		this.sidesChooseButton.Label = "Choose";
		this.hbox3.Add(this.sidesChooseButton);
		global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.sidesChooseButton]));
		w20.Position = 2;
		w20.Expand = false;
		w20.Fill = false;
		this.vbox5.Add(this.hbox3);
		global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox5[this.hbox3]));
		w21.Position = 1;
		w21.Expand = false;
		w21.Fill = false;
		this.GtkAlignment2.Add(this.vbox5);
		this.soundFrame.Add(this.GtkAlignment2);
		this.soundFrameLabel = new global::Gtk.Label();
		this.soundFrameLabel.Name = "soundFrameLabel";
		this.soundFrameLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Sound Options</b>");
		this.soundFrameLabel.UseMarkup = true;
		this.soundFrame.LabelWidget = this.soundFrameLabel;
		this.vbox2.Add(this.soundFrame);
		global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.soundFrame]));
		w24.Position = 1;
		this.GtkAlignment1.Add(this.vbox2);
		this.feedbackFrame.Add(this.GtkAlignment1);
		this.feedbackFrameLabel = new global::Gtk.Label();
		this.feedbackFrameLabel.Name = "feedbackFrameLabel";
		this.feedbackFrameLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Feedback</b>");
		this.feedbackFrameLabel.UseMarkup = true;
		this.feedbackFrame.LabelWidget = this.feedbackFrameLabel;
		this.alignment3.Add(this.feedbackFrame);
		this.mainWindowSeparationBox.Add(this.alignment3);
		global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.mainWindowSeparationBox[this.alignment3]));
		w28.Position = 1;
		this.vbox3.Add(this.mainWindowSeparationBox);
		global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.mainWindowSeparationBox]));
		w29.Position = 1;
		w29.Expand = false;
		w29.Fill = false;
		this.alignment1.Add(this.vbox3);
		this.Add(this.alignment1);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.DefaultWidth = 576;
		this.DefaultHeight = 226;
		this.soundFrame.HasDefault = true;
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.connectButton.Clicked += new global::System.EventHandler(this.ConnectHandler);
		this.calibrateButton.Clicked += new global::System.EventHandler(this.CalibrateHandler);
		this.disconnectButton.Clicked += new global::System.EventHandler(this.DisconnectHandler);
		this.vibrationCheckbutton.Toggled += new global::System.EventHandler(this.ToggleVibrationHandler);
		this.soundCheckbutton.Toggled += new global::System.EventHandler(this.ToggleSoundHandler);
		this.centerListenButton.Clicked += new global::System.EventHandler(this.CenterListenHandler);
		this.centerChooseButton.Clicked += new global::System.EventHandler(this.CenterChooseHandler);
		this.sidesListenButton.Clicked += new global::System.EventHandler(this.SiideListenHandler);
		this.sidesChooseButton.Clicked += new global::System.EventHandler(this.SideChooseHandler);
	}
}
